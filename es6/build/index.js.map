{"version":3,"sources":["../src/index.js"],"names":["Task","title","done","li","document","createElement","textContent","classList","add","addEventListener","toggle","TaskList","tasks","task","push","filter","ul","forEach","appendChild","render","Button","caption","styleClass","button","App","parentElem","taskList","purgeButton","purge","purgeCompleted","app","querySelector"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;IAEMA,I;AACF,kBAAYC,KAAZ,EAAmBC,IAAnB,EAAyB;AAAA;;AACrB,aAAKD,KAAL,GAAaA,KAAb;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACH;;;;iCAEQ;AAAA;;AACL,gBAAIC,KAAKC,SAASC,aAAT,CAAuB,IAAvB,CAAT;AACAF,eAAGG,WAAH,GAAiB,KAAKL,KAAtB;AACA,gBAAI,KAAKC,IAAT,EAAeC,GAAGI,SAAH,CAAaC,GAAb,CAAiB,MAAjB;AACfL,eAAGM,gBAAH,CAAoB,OAApB,EAA6B,YAAM;AAC/B,sBAAKP,IAAL,GAAY,CAAC,MAAKA,IAAlB;AACAC,mBAAGI,SAAH,CAAaG,MAAb,CAAoB,MAApB;AACH,aAHD;AAIA,mBAAOP,EAAP;AACH;;;;;;IAGCQ,Q;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AACf,aAAKA,KAAL,GAAaA,KAAb;AACH;;;;gCAEOC,I,EAAM;AACV,iBAAKD,KAAL,CAAWE,IAAX,CAAgBD,IAAhB;AACH;;;yCAEgB;AACb,iBAAKD,KAAL,GAAa,KAAKA,KAAL,CAAWG,MAAX,CAAkB;AAAA,uBAAQ,CAACF,KAAKX,IAAd;AAAA,aAAlB,CAAb;AACH;;;iCAEQ;AACL,gBAAIc,KAAKZ,SAASC,aAAT,CAAuB,IAAvB,CAAT;AACA,iBAAKO,KAAL,CAAWK,OAAX,CAAmB,gBAAQ;AACvBD,mBAAGE,WAAH,CAAeL,KAAKM,MAAL,EAAf;AACH,aAFD;AAGA,mBAAOH,EAAP;AACH;;;;;;IAGCI,M;AACF,oBAAYC,OAAZ,EAAiD;AAAA,YAA5BC,UAA4B,uEAAf,aAAe;;AAAA;;AAC7C,aAAKD,OAAL,GAAeA,OAAf;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACH;;;;iCAEQ;AACL,gBAAIC,SAASnB,SAASC,aAAT,CAAuB,QAAvB,CAAb;AACAkB,mBAAOjB,WAAP,GAAqB,KAAKe,OAA1B;AACAE,mBAAOhB,SAAP,CAAiBC,GAAjB,CAAqB,KAArB,EAA4B,KAAKc,UAAjC;AACA,mBAAOC,MAAP;AACH;;;;;;IAGCC,G;AACF,iBAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAAA;;AAC9B,aAAKD,UAAL,GAAkBA,UAAlB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,WAAL,GAAmB,IAAIP,MAAJ,CAAW,gBAAX,EAA6B,YAA7B,CAAnB;AACH;;;;iCAEQ;AAAA;;AACL,iBAAKK,UAAL,CAAgBnB,WAAhB,GAA8B,EAA9B;AACA,iBAAKmB,UAAL,CAAgBP,WAAhB,CAA4B,KAAKQ,QAAL,CAAcP,MAAd,EAA5B;AACA,gBAAIS,QAAQ,KAAKH,UAAL,CAAgBP,WAAhB,CAA4B,KAAKS,WAAL,CAAiBR,MAAjB,EAA5B,CAAZ;AACAS,kBAAMnB,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AAClC,uBAAKiB,QAAL,CAAcG,cAAd;AACA,uBAAKV,MAAL;AACH,aAHD;AAIH;;;;;;AAGL,IAAIO,WAAW,IAAIf,QAAJ,CAAa,CACxB,IAAIX,IAAJ,CAAS,oBAAT,CADwB,EAExB,IAAIA,IAAJ,CAAS,yBAAT,CAFwB,EAGxB,IAAIA,IAAJ,CAAS,gCAAT,CAHwB,CAAb,CAAf;;AAMA,IAAI8B,MAAM,IAAIN,GAAJ,CAAQpB,SAAS2B,aAAT,CAAuB,MAAvB,CAAR,EAAwCL,QAAxC,CAAV;;AAEAI,IAAIX,MAAJ","file":"index.js","sourcesContent":["// @ts-check\n\"use strict\";\n\n//TODO: create classes for Task,\n//TaskList, Button, TaskForm, and App.\n//Each of these classes should have\n//a render() method that renders their\n//data as HTML elements.\n\nclass Task {\n    constructor(title, done) {\n        this.title = title;\n        this.done = done;\n    }\n\n    render() {\n        let li = document.createElement(\"li\");\n        li.textContent = this.title;\n        if (this.done) li.classList.add(\"done\");\n        li.addEventListener(\"click\", () => {\n            this.done = !this.done;\n            li.classList.toggle(\"done\");\n        });\n        return li;\n    }\n}\n\nclass TaskList {\n    constructor(tasks) {\n        this.tasks = tasks;\n    }\n\n    addTask(task) {\n        this.tasks.push(task);\n    }\n\n    purgeCompleted() {\n        this.tasks = this.tasks.filter(task => !task.done);\n    }\n\n    render() {\n        let ul = document.createElement(\"ul\");\n        this.tasks.forEach(task => {\n            ul.appendChild(task.render());\n        });\n        return ul;\n    }\n}\n\nclass Button {\n    constructor(caption, styleClass = \"btn-primary\") {\n        this.caption = caption;\n        this.styleClass = styleClass;\n    }\n\n    render() {\n        let button = document.createElement(\"button\");\n        button.textContent = this.caption;\n        button.classList.add(\"btn\", this.styleClass);\n        return button;\n    }\n}\n\nclass App {\n    constructor(parentElem, taskList) {\n        this.parentElem = parentElem;\n        this.taskList = taskList;\n        this.purgeButton = new Button(\"Puge Completed\", \"btn-danger\");\n    }\n\n    render() {\n        this.parentElem.textContent = \"\";\n        this.parentElem.appendChild(this.taskList.render());\n        let purge = this.parentElem.appendChild(this.purgeButton.render());\n        purge.addEventListener(\"click\", () => {\n            this.taskList.purgeCompleted();\n            this.render();\n        })\n    }\n}\n\nlet taskList = new TaskList([\n    new Task(\"Learn ES6 Festures\"),\n    new Task(\"Buy Dr. Stearns a Tesla\"),\n    new Task(\"Buy the iSchool a new building\")\n]);\n\nlet app = new App(document.querySelector(\"#app\"), taskList);\n\napp.render();"]}